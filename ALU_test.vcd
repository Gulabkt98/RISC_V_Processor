$date
	Sun Sep 21 12:18:35 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module ALU_tb $end
$var wire 1 ! Z $end
$var wire 1 " V $end
$var wire 32 # Result [31:0] $end
$var wire 1 $ N $end
$var wire 1 % C $end
$var reg 32 & A [31:0] $end
$var reg 3 ' ALUcontrol [2:0] $end
$var reg 32 ( B [31:0] $end
$scope module dut $end
$var wire 32 ) A [31:0] $end
$var wire 3 * ALUcontrol [2:0] $end
$var wire 32 + B [31:0] $end
$var wire 1 % C $end
$var wire 32 , Result [31:0] $end
$var wire 1 " V $end
$var wire 32 - a_and_b [31:0] $end
$var wire 32 . a_or_b [31:0] $end
$var wire 32 / not_b [31:0] $end
$var wire 32 0 sum [31:0] $end
$var wire 32 1 mux_2 [31:0] $end
$var wire 32 2 mux_1 [31:0] $end
$var wire 1 3 cout $end
$var wire 1 ! Z $end
$var wire 1 $ N $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
03
b11 2
b1000 1
b1000 0
b11111111111111111111111111111100 /
b111 .
b1 -
b1000 ,
b11 +
b0 *
b101 )
b11 (
b0 '
b101 &
0%
0$
b1000 #
0"
0!
$end
#10
1%
13
b10 #
b10 ,
b10 1
b11111111111111111111111111111100 2
b10 0
b1 '
b1 *
#20
1$
0%
13
b11110000111100000000000000000000 #
b11110000111100000000000000000000 ,
b11110000111100000000000000000000 1
b11111111111111110000000000000000 2
b1111111111111111 /
b11110000111100000000000000000000 -
b11111111111111111111000011110000 .
b11110000111011111111000011110000 0
b10 '
b10 *
b11111111111111110000000000000000 (
b11111111111111110000000000000000 +
b11110000111100001111000011110000 &
b11110000111100001111000011110000 )
#30
03
b11111111111111111111000011110000 #
b11111111111111111111000011110000 ,
b11111111111111111111000011110000 1
b1111111111111111 2
b11110000111100011111000011110000 0
b11 '
b11 *
#40
